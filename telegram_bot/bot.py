import logging
from io import BytesIO
import os
import requests
from telegram import Update, InputFile
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext
from dotenv import load_dotenv


logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
BACKEND_URL = os.getenv('BACKEND_URL')

user_images = {}

def start(update: Update, context: CallbackContext) -> None:
    update.message.reply_text('–ü—Ä–∏–≤–µ—Ç! üåü –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –¥–≤–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: –∏—Å—Ö–æ–¥–Ω–æ–µ –∏ —Å—Ç–∏–ª—å, –∏ —è –∏—Ö —Å—Ç–∏–ª–∏–∑—É—é! üé®')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
def help_command(update: Update, context: CallbackContext) -> None:
    update.message.reply_text(
        '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n'
        '/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n'
        '/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n'
        '/stylize - –°—Ç–∏–ª–∏–∑–æ–≤–∞—Ç—å, –∏—Å–ø–æ–ª—å–∑—É—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∏ —Å—Ç–∏–ª—è\n'
        '/default_style - –°—Ç–∏–ª–∏–∑–æ–≤–∞—Ç—å, –∏—Å–ø–æ–ª—å–∑—É—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∏–ª—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é\n'
        '/default_images - –°—Ç–∏–ª–∏–∑–æ–≤–∞—Ç—å, –∏—Å–ø–æ–ª—å–∑—É—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∏ —Å—Ç–∏–ª—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é\n'
        '/default_content - –°—Ç–∏–ª–∏–∑–æ–≤–∞—Ç—å, –∏—Å–ø–æ–ª—å–∑—É—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∏–ª—è\n'
        '/reset - –°–±—Ä–æ—Å–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è'
    )

def handle_images(update: Update, context: CallbackContext) -> None:
    user_id = update.message.from_user.id
    photo_file = update.message.photo[-1].get_file()

    photo_byte_array = BytesIO()
    photo_file.download(out=photo_byte_array)
    photo_byte_array.seek(0)

    if user_id in user_images:
        user_images[user_id]['style_image'] = photo_byte_array

        files = {
            'content_image': ('content_image.jpg', user_images[user_id]['content_image']),
            'style_image': ('style_image.jpg', user_images[user_id]['style_image'])
        }

        update.message.reply_text('–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –ø–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ...')
        response = requests.post(BACKEND_URL + '/stylize/', files=files)
        if response.status_code == 200:
            update.message.reply_photo(photo=BytesIO(response.content))
        else:
            update.message.reply_text('–ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ç–∏–ª–∏–∑–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞. üòî')

        del user_images[user_id]
    else:
        user_images[user_id] = {'content_image': photo_byte_array}
        update.message.reply_text('–ü–µ—Ä–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ. –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∏–ª—è.')

def reset(update: Update, context: CallbackContext) -> None:
    user_id = update.message.from_user.id
    if user_id in user_images:
        del user_images[user_id]
    update.message.reply_text('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–±—Ä–æ—à–µ–Ω—ã. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏ –∑–∞–Ω–æ–≤–æ.')

def stylize(update: Update, context: CallbackContext) -> None:
    user_id = update.message.from_user.id
    if user_id not in user_images or 'content_image' not in user_images[user_id] or 'style_image' not in user_images[user_id]:
        update.message.reply_text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–≤–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏.')
        return

    files = {
        'content_image': ('content_image.jpg', user_images[user_id]['content_image']),
        'style_image': ('style_image.jpg', user_images[user_id]['style_image'])
    }

    response = requests.post(BACKEND_URL + '/stylize/', files=files)
    if response.status_code == 200:
        stylized_image = BytesIO(response.content)
        update.message.reply_photo(photo=InputFile(stylized_image, filename='stylized.jpg'))
    else:
        update.message.reply_text('–ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ç–∏–ª–∏–∑–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞. üòî')

def default_style(update: Update, context: CallbackContext) -> None:
    user_id = update.message.from_user.id
    if user_id not in user_images or 'content_image' not in user_images[user_id]:
        update.message.reply_text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏.')
        return

    files = {
        'content_image': ('content_image.jpg', user_images[user_id]['content_image'])
    }

    response = requests.post(BACKEND_URL + '/default-style/', files=files)
    if response.status_code == 200:
        stylized_image = BytesIO(response.content)
        update.message.reply_photo(photo=InputFile(stylized_image, filename='stylized.jpg'))
    else:
        update.message.reply_text('–ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ç–∏–ª–∏–∑–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞. üòî')

def default_images(update: Update, context: CallbackContext) -> None:
    response = requests.get(BACKEND_URL + '/default-images/')
    if response.status_code == 200:
        stylized_image = BytesIO(response.content)
        update.message.reply_photo(photo=InputFile(stylized_image, filename='stylized.jpg'))
    else:
        update.message.reply_text('–ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ç–∏–ª–∏–∑–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞. üòî')

def default_content(update: Update, context: CallbackContext) -> None:
    user_id = update.message.from_user.id
    if user_id not in user_images or 'style_image' not in user_images[user_id]:
        update.message.reply_text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏.')
        return

    files = {
        'style_image': ('style_image.jpg', user_images[user_id]['style_image'])
    }

    response = requests.post(BACKEND_URL + '/default-content/', files=files)
    if response.status_code == 200:
        stylized_image = BytesIO(response.content)
        update.message.reply_photo(photo=InputFile(stylized_image, filename='stylized.jpg'))
    else:
        update.message.reply_text('–ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ç–∏–ª–∏–∑–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞. üòî')

def main():
    updater = Updater(TOKEN)
    dispatcher = updater.dispatcher

    dispatcher.add_handler(CommandHandler("start", start))
    dispatcher.add_handler(CommandHandler("help", help_command))
    dispatcher.add_handler(CommandHandler("stylize", stylize))
    dispatcher.add_handler(CommandHandler("default_style", default_style))
    dispatcher.add_handler(CommandHandler("default_images", default_images))
    dispatcher.add_handler(CommandHandler("default_content", default_content))
    dispatcher.add_handler(CommandHandler("reset", reset))
    dispatcher.add_handler(MessageHandler(Filters.photo, handle_images))

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()